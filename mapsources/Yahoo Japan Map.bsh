/**
 Yahoo Japan Map Example:
 Input parameters for this script: "zoom", "x" and "y"
**/
String getTileUrl( int zoom, int x, int y ) {
 if (zoom == 0) {
    return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + y + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 1) {
    return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (0 - y)  + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 2) {
    return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (1 - y)  + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 3) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (3 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 4) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (7 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 5) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (15 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 6) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (31 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 7) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (63 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 8) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (127 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 9) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (255 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 10) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (511 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 11) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (1023 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 12) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (2047 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 13) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (4095 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 14) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (8191 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 15) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (16383 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 16) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (32767 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 17) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (65535 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 18) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (131071 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 19) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (262143 - y) + "&z=" + (zoom + 1) + ".png";
 }
 if (zoom == 20) {
 return "http://m.map.c.yimg.jp/m?r=1&x=" + x + "&y=" + (524287 - y) + "&z=" + (zoom + 1) + ".png";
 }
} 
void addHeaders( java.net.HttpURLConnection conn) {
  // Optional: set HTTP Referer or Cookies 
  conn.addRequestProperty("Cookie","test=12345");
  conn.addRequestProperty("Referer","http://www.openstreetmap.org");
}

tileType = "png"; // required - image format "png" "jpg" or "gif"

// Default size of each tile is 256x256 pixel
tileSize = 256; // optional
minZoom = 0;    // optional
maxZoom = 19;   // optional
name = "Yahoo Japan Map";


tileUpdate = TileUpdate.None; // optional - possibilities: 
// TileUpdate.IfNoneMatch, TileUpdate.ETag, TileUpdate.IfModifiedSince, TileUpdate.LastModified, TileUpdate.None